#not pretty but linear time complexity solution

def solution(A):

    n=len(A)
    if n == 3:
        return A[0]*A[1]*A[2]
    elif n == 4:
        B=A
        B.sort()
        if B[0]*B[1]*B[3] > B[3]*B[2]*B[1]:
            return B[0]*B[1]*B[3]
        else:
            return B[3]*B[2]*B[1]
    else:
        B = [A[0], A[1], A[2], A[3], A[4]]
        B.sort()
        
        p, q, r = B[4], B[3], B[2]
        a, b = B[0], B[1]
        for x in range (5, n):
            if A[x] >= p:
                r = q
                q = p
                p = A[x]
            elif A[x] >= q:
                r = q
                q = A[x]
            elif A[x] >= r:
                r = A[x]
            elif A[x] <= a:
                b = a
                a = A[x]
            elif A[x] <= b:
                b = A[x]
        if p*q*r > p*a*b:
            return p*q*r
        else:
            return p*a*b
